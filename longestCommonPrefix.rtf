{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf230
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0  public String longestCommonPrefix(String[] strs) \{\
    	// handle special case\
        if(strs.length == 0) return "";\
        // set the first string as prefix\
        String prefix = strs[0];\
        for(int i = 1; i < strs.length; i++) \{\
            int j = 0;\
            for(; j < prefix.length() && j < strs[i].length(); j++) \{\
            	// find the longest prefix for current string \
                if(prefix.charAt(j) != strs[i].charAt(j)) \{\
                    break;\
                \}\
            \}\
            // update longest prefix\
            prefix = prefix.substring(0, j);\
            // This line can be removed, just for performance issue\
            if(prefix.length() == 0) break;\
        \}\
        \
        return prefix;\
    \}}