/* longest palindromic substring

public static String longestPalidromicSubstring(String s)
{
	if(s==null)
		return null;

	if(s.length==0)
		return '';

	int maxLen = 0;
	int maxStr = "";
	for(int i=0;i<s.length();i++)
	{
			// get longest palindrome with center of i
		String ns1 = getSubstring(s,i,i);

		if(ns1.length>maxLen)
		{
			maxLen = ns1.length;
			maxStr = ns1;
		}
			
				// get longest palindrome with center of i and i+1
		String ns2 = getSubstring(s,i,i+1);
		if(ns2.length>maxLen)
		{
			maxStr = ns2;
			maxLen = ns2.length;	
		}
	}


	return maxStr;

}

public static String getSubstring(String s,int begin,int end)
{
	while(begin>=0 && end<=s.length()-1 && s.charAt(begin)==s.charAt(end))
	{
		begin--;
		end++;
	}

	return s.subString(begin+1,end);
}